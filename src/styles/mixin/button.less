.button-size(@padding; @font-size; @border-radius) {
  padding: @padding;
  font-size: @font-size;
  -webkit-border-radius: @border-radius;
  -moz-border-radius: @border-radius;
  border-radius: @border-radius;
}

.button-color(@color; @background; @border) {

  color: @color;
  background-color: @background;
  border-color: @border;

  > a:only-child {
    color: currentColor; // currentColor == inherit;
    &:after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      background: transparent;
    }
  }
}

.button-variant(@color; @background; @border) {
  .button-color(@color; @background; @border);
  &:hover {
    .button-color(tint(@color, 20%); tint(@background, 20%); tint(@border, 20%));
  }
  &:active,
  &.active {
    .button-color(shade(@color, 5%); shade(@background, 5%); shade(@background, 5%));
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &，
    &:hover,
    &:active,
    &.active {
      .button-color(@btn-disable-color; @btn-disable-bg; @btn-disable-border);
    }
  }
}

;

.btn() {
  display: inline-block;
  vertical-align: middle;
  margin-bottom: 0;
  font-weight: @btn-font-weight;
  text-align: center;
  cursor: pointer;
  touch-action: manipulation; // 指定某个指定的区域是否允许用户操作
  background-image: none;
  border: 1px solid transparent;
  white-space: nowrap;
  line-height: @line-height-base; // 24px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none; // 设置按钮上的文字是否可以被选择 ：none: 不能被选择;

  /** 按钮 内填充， 字体大小， 圆角 **/
  .button-size(@btn-padding-base; @btn-font-size; @btn-border-radius);
  /** 动画时长 **/
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  -o-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);

  -webkit-transition: color @transition-time linear, background-color @transition-time linear, border @transition-time linear;
  -moz-transition: color @transition-time linear, background-color @transition-time linear, border @transition-time linear;
  -ms-transition: color @transition-time linear, background-color @transition-time linear, border @transition-time linear;
  -o-transition: color @transition-time linear, background-color @transition-time linear, border @transition-time linear;
  transition: color @transition-time linear, background-color @transition-time linear, border @transition-time linear;

  > .@{css-prefix-iconfont} {
    line-height: 1;
  }

  &,
  &:active,
  &:focus {
    outline: 0;
  }

  &:not([disabled]):hover {
    text-decoration: none;
  }

  &:not([disabled]):active {
    outline: 0;
    -webkit-transition: none;
    -moz-transition: none;
    -ms-transition: none;
    -o-transition: none;
    transition: none;
  }

  &.disabled,
  &[disabled] {
    cursor: @cursor-disabled;
    > * {
      pointer-events: none;
    }
  }

  &-large {
    .button-size(@btn-padding-large; @btn-font-size-large; @btn-border-radius);
  }

  &-small {
    .button-size(@btn-padding-small; @btn-font-size; @btn-border-radius-small);
  }
}

.btn-default() {
  .button-variant(@btn-default-color; @btn-default-bg; @btn-default-border);
  &:not([disabled]):hover {
    .button-color(tint(@primary-color, 20%); white; tint(@primary-color, 20%));
  }
  &:not([disabled]):active,
  &:not([disabled]).active {
    .button-color(shade(@primary-color, 5%); white; shade(@primary-color, 5%));
  }
}

.btn-primary() {
  .button-variant(@btn-primary-color; @btn-primary-bg; @primary-color);

  &:hover,
  &:active,
  &.active {
    color: @btn-primary-color;
  }
}

.btn-ghost() {
  .button-variant(@btn-ghost-color; @btn-ghost-bg; @btn-ghost-border);
  &:hover {
    .button-color(tint(@primary-color, 20%); @btn-ghost-bg; tint(@primary-color, 20%));
  }
  &:active,
  &.active {
    .button-color(shade(@primary-color, 5%); @btn-ghost-bg; shade(@btn-ghost-border, 5%));
  }
}

.btn-dashed() {
  .button-variant(@btn-ghost-color; @btn-ghost-bg; @btn-ghost-border);
  border-style: dashed;

  &:hover {
    .button-color(tint(@primary-color, 20%); @btn-ghost-bg; tint(@primary-color, 20%));
  }
  &:active,
  &.active {
    .button-color(shade(@primary-color, 5%); @btn-ghost-bg; shade(@primary-color, 5%));
  }
}

.btn-text {
  .button-variant(@btn-ghost-color; @btn-ghost-bg; transparent);

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:active,
    &.active {
      .button-color(@btn-disable-color; @btn-disable-bg; transparent);
    }
  }

  &:hover {
    .button-color(tint(@primary-color, 20%); @btn-ghost-bg; transparent);
  }

  &:active,
  &.active {
    .button-color(shade(@primary-color, 5%); @btn-ghost-bg; transparent);
  }
}

// color
.btn-color(@color) {
  .button-variant(@btn-primary-color; @color; @color);
  &:hover,
  &:active,
  &.active {
    color: @btn-primary-color;
  }
}

.btn-circle(@btnClassname: ivu-btn) {

  -webkit-border-radius: @btn-circle-size;
  -moz-border-radius: @btn-circle-size;
  border-radius: @btn-circle-size;

  &.@{btnClassname}-large {
    -webkit-border-radius: @btn-circle-size-large;
    -moz-border-radius: @btn-circle-size-large;
    border-radius: @btn-circle-size-large;
  }

  &.@{btnClassname}-size {
    -webkit-border-radius: @btn-circle-size-small;
    -moz-border-radius: @btn-circle-size-small;
    border-radius: @btn-circle-size-small;
  }

  &.@{btnClassname}-icon-only{
    .square(@btn-circle-size);  // 基于 size 设置正方形区域
    .button-size(0; @font-size-base + 2; 50%);

    &.@{btnClassname}-large{
      .square(@btn-circle-size-large);
      .button-size(0; @btn-font-size-large + 2; 50%);
    }

    &.@{btnClassname}-small{
      .square(@btn-circle-size-small);
      .button-size(0; @font-size-base; 50%);
    }
  }
}
